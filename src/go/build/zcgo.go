// Code generated by go tool dist; DO NOT EDIT.

package build

import "runtime"

var defaultCGO_ENABLED = func(goos string, goarch string) string {
	switch goos + `/` + goarch {

	case "linux/amd64":
		return ""

	case "darwin/amd64":
		return ""

	case "darwin/arm64":
		return ""

	case "freebsd/386":
		return ""

	case "freebsd/amd64":
		return ""

	case "linux/386":
		return ""

	case "linux/arm64":
		return ""

	case "linux/armv6l":
		return ""

	case "linux/ppc64le":
		return ""

	case "linux/s390x":
		return "1"

	case "windows/386":
		return ""

	case "windows/amd64":
		return ""

	case "windows/arm64":
		return ""

	case "js/wasm":
		return ""

	}
	panic("gocompiler: unknown platform " + goos + `/` + goarch)
}(runtime.GOOS, runtime.GOARCH)

var cgoEnabled = map[string]bool{
	"aix/ppc64":       true,
	"android/386":     true,
	"android/amd64":   true,
	"android/arm":     true,
	"android/arm64":   true,
	"darwin/amd64":    true,
	"darwin/arm64":    true,
	"dragonfly/amd64": true,
	"freebsd/386":     true,
	"freebsd/amd64":   true,
	"freebsd/arm":     true,
	"freebsd/arm64":   true,
	"freebsd/riscv64": true,
	"illumos/amd64":   true,
	"ios/amd64":       true,
	"ios/arm64":       true,
	"linux/386":       true,
	"linux/amd64":     true,
	"linux/arm":       true,
	"linux/arm64":     true,
	"linux/loong64":   true,
	"linux/mips":      true,
	"linux/mips64":    true,
	"linux/mips64le":  true,
	"linux/mipsle":    true,
	"linux/ppc64le":   true,
	"linux/riscv64":   true,
	"linux/s390x":     true,
	"linux/sparc64":   true,
	"netbsd/386":      true,
	"netbsd/amd64":    true,
	"netbsd/arm":      true,
	"netbsd/arm64":    true,
	"openbsd/386":     true,
	"openbsd/amd64":   true,
	"openbsd/arm":     true,
	"openbsd/arm64":   true,
	"openbsd/mips64":  true,
	"solaris/amd64":   true,
	"windows/386":     true,
	"windows/amd64":   true,
	"windows/arm64":   true,
}

//gocompiler patch
